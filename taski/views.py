from django.shortcuts import render, redirect, get_object_or_404
from taski.models import Task
from .forms import TaskForm
from django.contrib.auth.decorators import user_passes_test
from django.core.exceptions import PermissionDenied


def is_admin_user(user):

    if user.is_superuser or user.groups.filter(name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã').exists():
        return True
    raise PermissionDenied("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É 403

admin_required = user_passes_test(is_admin_user)


@admin_required
def index(request):
   
   search_query = request.GET.get('search', '')
   if search_query:
        tasks = Task.objects.filter(title__icontains=search_query) | Task.objects.filter(task__icontains=search_query)
   else:
        tasks = Task.objects.all()
   return render(request, 'tasks/index.html', {'tasks': tasks})



def custom_permission_denied_view(request, exception=None):
     return render(request, 'errors/403.html', status=403)

def custom_page_not_found_view(request, exception=None):
    return render(request, 'errors/404.html', status=404)

# üü¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
def create_task(request):
    if request.method == 'POST':
        form = TaskForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('home')
    else:
        form = TaskForm()
    return render(request, 'tasks/create/create_task.html', {'title_task': '–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É','form': form})

# üü¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏
def edit_task(request, pk):
    task = get_object_or_404(Task, pk=pk)
    if request.method == 'POST':
        form = TaskForm(request.POST, instance=task)
        if form.is_valid():
            form.save()
            return redirect('home')
    else:
        form = TaskForm(instance=task)
    return render(request, 'tasks/edit/edit_task.html', {'title_task': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É!!!!!!!!!!!!!!!', 'form': form, 'task': task})

# üü¢ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
def delete_task(request, pk):
    task = get_object_or_404(Task, pk=pk)
    if request.method == 'POST':
        task.delete()
        return redirect('home')
    return render(request, 'tasks/delete/delete_task.html', {'task': task})



def mark_as_not_done(request, pk):
    """–û—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –∫–∞–∫ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é"""
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á—É –ø–æ –µ—ë –ø–µ—Ä–≤–∏—á–Ω–æ–º—É –∫–ª—é—á—É (pk)
    task = get_object_or_404(Task, pk=pk)
    # –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –Ω–∞ "–Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
    task.status = False  
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    task.save()
    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    return redirect('home') 

def mark_as_done(request, pk):
    """–û—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é"""
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á—É –ø–æ –µ—ë –ø–µ—Ä–≤–∏—á–Ω–æ–º—É –∫–ª—é—á—É (pk)
    task = get_object_or_404(Task, pk=pk)
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –∫–∞–∫ "–≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
    task.status = True  
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    task.save()
    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    return redirect('home') 
